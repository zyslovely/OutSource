<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoogle.teach.mapper.FeedBackMapper">
	<resultMap type="FeedBack" id="feedBackMap ">
		<id property="id" column="id" />
		<result property="fromUserId" column="fromUserId" />
		<result property="toUserId" column="toUserId" />
		<result property="content" column="content" />
		<result property="createTime" column="createTime" />
		<result property="courseId" column="courseId" />
		<result property="status" column="status" />
		<result property="feedbackId" column="feedbackId" />
	</resultMap>
	<insert id="addFeedBack" parameterType="FeedBack">
		INSERT INTO TB_FeedBack
		(
		fromUserId,toUserId,content,createTime,courseId,status,feedbackId
		)VALUES(
		#{fromUserId},#{toUserId},#{content},#{createTime},#{courseId},#{status},#{feedbackId}
		)
		<selectKey keyProperty="id" resultType="long">
			SELECT
			LAST_INSERT_ID() AS VALUE
	  </selectKey>
	</insert>

	<select id="getFeedBacksByUserId" resultType="FeedBack">
		SELECT *
		from
		TB_FeedBack
		WHERE
		toUserId=#{userId}
		<if test="courseId">0>
			and courseId=#{courseId}
         </if>
		order by id desc
		<if test="offset >=0 ">
			limit #{limit} offset #{offset}
		</if>
	</select>

	<select id="getFeedbacksByOriginId" resultType="FeedBack">
		SELECT *
		from
		TB_FeedBack
		WHERE id=#{id} or feedbackId=#{id};
	</select>

	<select id="getUnreadCount" resultType="int">
		SELECT count(*)
		from
		TB_FeedBack
		WHERE toUserId=#{toUserId} and status=1;
	</select>

	<select id="getFeedBacksByFromUserId" resultType="FeedBack">
		SELECT *
		from
		TB_FeedBack
		WHERE (toUserId=#{toUserId} and
		fromUserId=#{fromUserId}) or (toUserId=#{fromUserId} and
		fromUserId=#{toUserId}) 
		order by id desc
		<if test="offset >=0 ">
			limit #{limit} offset #{offset}
		</if>
		;
	</select>

	<select id="getFeedBacksByCourseId" resultType="FeedBack">
		SELECT *
		from
		TB_FeedBack
		WHERE toUserId=#{toUserId} and
		courseId=#{courseId}
		order by id desc
		<if test="offset >=0 ">
			limit #{limit} offset #{offset}
		</if>
		;
	</select>

	<update id="updateFeedBackReaded" flushCache="true"
		statementType="PREPARED">
		UPDATE
		TB_FeedBack
		set
		status=0
		WHERE
		id=
		#{id};
	</update>
</mapper>