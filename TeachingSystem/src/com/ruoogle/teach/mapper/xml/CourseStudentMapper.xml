<?xml version="1.0" encoding="UTF-8" ?>  <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoogle.teach.mapper.CourseStudentMapper">
	<resultMap type="CourseStudent" id="courseStudentMap ">
		<id property="id" column="id" />
		<result property="courseId" column="courseId" />
		<result property="classId" column="classId" />
		<result property="userId" column="userId" />
		<result property="type" column="type" />
		<result property="status" column="status" />
		<result property="semesterId" column="semesterId" />
	</resultMap>
	<insert id="addCourseStudent" parameterType="CourseStudent">
		INSERT INTO
		TB_Course_Student (
		courseId,classId,userId,type,status,semesterId
		)VALUES(
		#{courseId},#{classId},#{userId},#{type},#{status},#{semesterId}
		)
		<selectKey keyProperty="id" resultType="long">
			SELECT
			LAST_INSERT_ID() AS VALUE
		</selectKey>
	</insert>

	<select id="getCourseStudentsByCourseId" resultType="CourseStudent">
		SELECT *
		from
		TB_Course_Student
		WHERE courseId=#{courseId} and type=0 order by id
		desc ;
	</select>

	<select id="getCourseTeacherByCourseId" resultType="CourseStudent">
		SELECT *
		from
		TB_Course_Student
		WHERE courseId=#{courseId} and (type=1 or type=2)
		order by id
		desc ;
	</select>

	<select id="getCourseStudentsByUserId" resultType="CourseStudent">
		SELECT *
		from
		TB_Course_Student
		WHERE userId=#{userId} and type=#{type}
		and semesterId=#{semesterId} order by id
		desc
		<if test="offset >=0 ">
			limit #{limit} offset #{offset};
		</if>
		;
	</select>

	<update id="updateCourseStudentsStatus" parameterType="CourseStudent"
		flushCache="true" statementType="PREPARED">
		UPDATE
		TB_Course_Student
		set
		status=#{status}
		WHERE
		courseId =
		#{courseId};
	</update>

	<select id="getCourseListBySemesterStudentId" resultType="CourseStudent">
		SELECT
		*
		from
		TB_Course_Student
		WHERE userId=#{userId} and
		semesterId=#{semesterId} order by id
		desc;
	</select>
	<select id="getCourseStudentByStudentId" resultType="CourseStudent">
		SELECT
		*
		from
		TB_Course_Student
		WHERE userId=#{studentId} and
		courseId=#{courseId}
	</select>


	<select id="getCourseListByUserId" resultType="CourseStudent">
		SELECT
		*
		from
		TB_Course_Student
		WHERE userId=#{userId} order by id desc
		<if test="offset >=0 ">
			limit #{limit} offset #{offset};
		</if>
		;
	</select>
	<delete id="deleteCourseStudentByCourse" flushCache="true"
		statementType="PREPARED">
		delete from TB_Course_Student
		where courseId=#{courseId};
	</delete>
</mapper>